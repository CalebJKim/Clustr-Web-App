{"version":3,"sources":["components/Club.module.css","components/ClubInfo.module.css","components/CategoryDropdown.module.css","components/ClubList.module.css","components/FilterButton.module.css","components/Button.module.css","components/Search.module.css","components/Button.js","components/Club.js","components/ClubInfo.js","Colors.js","components/FilterButton.js","components/Search.js","components/CategoryDropdown.js","components/ClubList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","className","children","props","styles","button","matchedString","string","searchFilter","parts","lastIndex","match","exec","push","slice","index","matched","key","length","Club","state","open","handleClick","setState","handleLinkClick","e","stopPropagation","this","name","color","tags","description","meetingTime","presidents","zoomLink","filters","wrapper","style","backgroundColor","onClick","map","tag","includes","filtered","field","link","href","target","rel","replace","React","Component","ClubInfo","joinable","meetingDay","joinBtn","feedItem","feedTitle","feedField","Colors","PINK","ORANGE","LIGHT_ORANGE","DARK_ORANGE","VERY_LIGHT_ORANGE","BLUE","BROWN","FilterButton","onSelect","selected","Search","handleInput","onChange","value","type","search","placeholder","DropdownItem","category","item","check","label","CategoryDropdown","wrapperRef","handleOpen","handleClose","contains","setRef","ref","document","addEventListener","categories","selectedCount","filter","opener","dropdown","allFilters","ClubList","selectedClub","handleSelectClub","clubName","handleBack","handleSelectFilter","filterName","handleSearch","clubs","selectedClubName","find","club","RegExp","filteredClubs","some","test","clubSelected","list","searchWrapper","day","time","info","backBtn","App","fetch","process","then","response","json","clubData","Object","entries","isNew","new","desc","tier","president","days","split","i","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,KAAO,mBAAmB,KAAO,mBAAmB,IAAM,kBAAkB,SAAW,uBAAuB,MAAQ,oBAAoB,KAAO,mBAAmB,QAAU,wB,gBCAhOD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,uBAAuB,YAAc,8BAA8B,QAAU,0BAA0B,SAAW,2BAA2B,UAAY,4BAA4B,UAAY,8B,gBCA9PD,EAAOC,QAAU,CAAC,QAAU,kCAAkC,OAAS,iCAAiC,SAAW,mCAAmC,KAAO,+BAA+B,MAAQ,gCAAgC,SAAW,mCAAmC,MAAQ,kC,gBCA1RD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,uBAAuB,cAAgB,gCAAgC,KAAO,uBAAuB,QAAU,0BAA0B,aAAe,iC,oBCArND,EAAOC,QAAU,CAAC,OAAS,6BAA6B,SAAW,iC,kBCAnED,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,wOCcZC,MARf,YAAkD,IAAjCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,SAAaC,EAAQ,wCAC/C,OACE,0CAAQF,UAAS,UAAKG,IAAOC,OAAZ,YAAsBJ,IAAiBE,GACrDD,I,gBCPP,SAASI,EAAcC,EAAQC,GAC7B,IAAKA,EAAc,OAAOD,EAC1B,IAAME,EAAQ,GAEdD,EAAaE,UAAY,EAGzB,IAFA,IAAIC,EAAQ,KACRD,EAAY,EACRC,EAAQH,EAAaI,KAAKL,IAChCE,EAAMI,KAAKN,EAAOO,MAAMJ,EAAWC,EAAMI,QACzCN,EAAMI,KAAK,0BAAMZ,UAAWG,IAAOY,QAASC,IAAKN,EAAMI,OAAQJ,EAAM,KACrED,EAAYC,EAAMI,MAAQJ,EAAM,GAAGO,OAGrC,OADAT,EAAMI,KAAKN,EAAOO,MAAMJ,IACjBD,E,IA2DMU,E,4MAlDbC,MAAQ,CACNC,MAAM,G,EAGRC,YAAc,WAEZ,EAAKC,SAAS,CACZF,MAAO,EAAKD,MAAMC,Q,EAItBG,gBAAkB,SAAAC,GAChBA,EAAEC,mB,uDAGM,IAAD,EAC4FC,KAAKxB,MAAjGyB,EADA,EACAA,KAAMC,EADN,EACMA,MAAOC,EADb,EACaA,KAAMC,EADnB,EACmBA,YAAaC,EADhC,EACgCA,YAAaC,EAD7C,EAC6CA,WAAYC,EADzD,EACyDA,SAAU1B,EADnE,EACmEA,aAAc2B,EADjF,EACiFA,QACjFd,EAAQM,KAAKP,MAAbC,KACP,OACE,4BACEpB,UAAWG,IAAOgC,QAClBC,MAAO,CAACC,gBAAiBT,GACzBU,QAASZ,KAAKL,aAEd,wBAAIrB,UAAWG,IAAOwB,MAAOtB,EAAcsB,EAAMpB,IACjD,wBAAIP,UAAWG,IAAO0B,MACnBA,EAAKU,KAAI,SAAAC,GAAG,OACX,wBACExC,UAAS,UAAKG,IAAOqC,IAAZ,YAAmBN,EAAQO,SAASD,GAAOrC,IAAOuC,SAAW,IACtE1B,IAAKwB,GACLA,OAGLpB,GAAQ,oCACP,uBAAGpB,UAAWG,IAAOwC,OAAQtC,EAAcyB,EAAavB,IACxD,uBAAGP,UAAWG,IAAOwC,OAArB,SAAkC,gCAASZ,IAC3C,uBAAG/B,UAAWG,IAAOwC,OAArB,cAAwCtC,EAAc2B,EAAYzB,IACjE0B,GAAY,uBAAGjC,UAAWG,IAAOwC,OAArB,cAAuC,uBAClD3C,UAAWG,IAAOyC,KAClBC,KAAMZ,EACNa,OAAO,SACPC,IAAI,sBACJT,QAASZ,KAAKH,iBACdU,EAASe,QAAQ,eAAgB,Y,GA5C1BC,IAAMC,W,gBCIVC,E,uKAnBH,IAAD,EACwDzB,KAAKxB,MAA7DyB,EADA,EACAA,KAAMG,EADN,EACMA,YAAasB,EADnB,EACmBA,SAAUC,EAD7B,EAC6BA,WAAYtB,EADzC,EACyCA,YAChD,OACE,yBAAK/B,UAAWG,IAAOgC,SACrB,wBAAInC,UAAWG,IAAOwB,MAAOA,GAC5ByB,GACC,kBAAC,EAAD,CAAQpD,UAAWG,IAAOmD,SAA1B,QAEF,uBAAGtD,UAAWG,IAAO2B,aAAcA,GACnC,yBAAK9B,UAAWG,IAAOoD,UACrB,wBAAIvD,UAAWG,IAAOqD,WAAtB,iBACA,uBAAGxD,UAAWG,IAAOsD,WAArB,WAAyCJ,GACzC,uBAAGrD,UAAWG,IAAOsD,WAArB,SAAuC1B,S,GAb1BkB,IAAMC,WCEdQ,EAVA,CACbC,KAAM,UACNC,OAAQ,UACRC,aAAc,UACdC,YAAa,UACbC,kBAAmB,UACnBC,KAAM,UACNC,MAAO,W,iBCiBMC,E,4MAhBb7C,YAAc,WACZ,EAAKnB,MAAMiE,SAAS,EAAKjE,MAAMyB,O,uDAGvB,IAAD,EACyBD,KAAKxB,MAA9ByB,EADA,EACAA,KAAMC,EADN,EACMA,MAAOwC,EADb,EACaA,SACpB,OACE,4BACEpE,UAAS,UAAKG,IAAOC,OAAZ,YAAsBgE,EAAWjE,IAAOiE,SAAW,IAC5D9B,QAASZ,KAAKL,YACde,MAAO,CAAC,UAAWR,IACnBD,O,GAZmBsB,IAAMC,W,iBCmBlBmB,E,4MAjBbC,YAAc,SAAA9C,GACZ,EAAKtB,MAAMqE,SAAS/C,EAAEsB,OAAO0B,Q,uDAI7B,OACE,2BACEC,KAAK,SACLD,MAAO9C,KAAKxB,MAAMwE,OAClBC,YAAY,eACZ3E,UAAWG,IAAOuE,OAClBH,SAAU7C,KAAK4C,kB,GAZFrB,IAAMC,W,gBCLrB0B,E,4MACJvD,YAAc,WACZ,EAAKnB,MAAMiE,SAAS,EAAKjE,MAAM2E,W,uDAGvB,IAAD,EACsBnD,KAAKxB,MAA3B2E,EADA,EACAA,SAAUT,EADV,EACUA,SACjB,OACE,4BAAQpE,UAAS,UAAKG,IAAO2E,KAAZ,YAAoBV,EAAWjE,IAAOiE,SAAW,IAAM9B,QAASZ,KAAKL,aACpF,0BAAMrB,UAAWG,IAAO4E,OAAxB,UACA,0BAAM/E,UAAWG,IAAO6E,OAAQH,Q,GAVb5B,IAAMC,WAoElB+B,E,4MAnDbC,WAAa,K,EAEb/D,MAAQ,CACNC,MAAM,G,EAOR+D,WAAa,WACX,EAAK7D,SAAS,CAAEF,MAAM,K,EAGxBgE,YAAc,SAAA5D,GACP,EAAK0D,WAAWG,SAAS7D,EAAEsB,SAC9B,EAAKxB,SAAS,CAAEF,MAAM,K,EAI1BkE,OAAS,SAAAC,GACP,EAAKL,WAAaK,G,kEAdlBC,SAASC,iBAAiB,QAAS/D,KAAK0D,e,+BAiBhC,IAAD,EACkC1D,KAAKxB,MAAvCD,EADA,EACAA,SAAUyF,EADV,EACUA,WAAYvB,EADtB,EACsBA,SACtB/C,EAAQM,KAAKP,MAAbC,KACDuE,EAAgBD,EAAWE,QAAO,0CAA4B3E,OACpE,OACE,yBAAKjB,UAAWG,IAAOgC,QAASoD,IAAK7D,KAAK4D,QACxC,4BACEtF,UAAWG,IAAO0F,OAClBvD,QAASZ,KAAKyD,YACdlF,EAHF,IAGa0F,EAAgB,GAAhB,WAAyBA,EAAzB,KAHb,WAICvE,GACC,yBAAKpB,UAAWG,IAAO2F,UACpBJ,EAAWnD,KAAI,mCAAEsC,EAAF,KAAYT,EAAZ,YACd,kBAAC,EAAD,CACEpD,IAAK6D,EACLA,SAAUA,EACVT,SAAUA,EACVD,SAAUA,a,GA1CKlB,IAAMC,W,gBCJrC,IAAM6C,EAAa,CACjB,CAACpE,KAAM,SAAUC,MAAO8B,EAAOC,MAC/B,CAAChC,KAAM,UAAWC,MAAO8B,EAAOC,MAChC,CAAChC,KAAM,YAAaC,MAAO8B,EAAOC,MAClC,CAAChC,KAAM,WAAYC,MAAO8B,EAAOC,MACjC,CAAChC,KAAM,SAAUC,MAAO8B,EAAOC,MAC/B,CAAChC,KAAM,MAAOC,MAAO8B,EAAOI,aAC5B,CAACnC,KAAM,YAAaC,MAAO8B,EAAOI,cAI9B4B,EAAa,CACjB,OACA,YACA,UACA,QACA,QACA,YACA,aACA,WACA,OACA,UAqJaM,E,4MA7Hb7E,MAAQ,CACN8E,aAAc,KACdvB,OAAQ,GACRxC,QAAS,I,EAGXgE,iBAAmB,SAAAC,K,EAMnBC,WAAa,WACX,EAAK9E,SAAS,CACZ2E,aAAc,Q,EAIlBI,mBAAqB,SAAAC,GACf,EAAKnF,MAAMe,QAAQO,SAAS6D,GAC9B,EAAKhF,SAAS,CACZY,QAAS,EAAKf,MAAMe,QAAQ0D,QAAO,SAAAA,GAAM,OAAIA,IAAWU,OAG1D,EAAKhF,SAAS,CACZY,QAAQ,CAAEoE,GAAH,mBAAkB,EAAKnF,MAAMe,a,EAK1CqE,aAAe,SAAA7B,GACb,EAAKpD,SAAS,CAAEoD,Y,uDAGR,IAAD,OACA8B,EAAS9E,KAAKxB,MAAdsG,MADA,EAEmD9E,KAAKP,MAA1CsF,EAFd,EAEAR,aAAgCvB,EAFhC,EAEgCA,OAAQxC,EAFxC,EAEwCA,QACzC+D,EAAeO,EAAME,MAAK,SAAAC,GAAI,OAAIA,EAAKhF,OAAS8E,KAChDlG,EAAemE,EAAS,IAAIkC,OAAoBlC,EAtF5C1B,QAAQ,2BAA4B,QAsFiB,MAAQ,KACjE6D,EAAgBL,EAAMZ,QAAO,SAAAe,GACjC,QAAIzE,EAAQjB,OAAS,GAEfiB,EAAQ4E,MAAK,SAAAlB,GAAM,OAAKe,EAAK9E,KAAKY,SAASmD,UAI7CrF,IAGCA,EAAawG,KAAKJ,EAAKhF,QACvBpB,EAAawG,KAAKJ,EAAK7E,eACvBvB,EAAawG,KAAKJ,EAAK3E,gBAO9B,OACE,yBAAKhC,UAAS,UAAKG,IAAOgC,QAAZ,YAAuB8D,EAAe9F,IAAO6G,aAAe,KACxE,yBAAKhH,UAAWG,IAAO8G,MACrB,4CACA,yBAAKjH,UAAWG,IAAO+G,eACrB,kBAAC,EAAD,CACExC,OAAQA,EACRH,SAAU7C,KAAK6E,eAEjB,6BAEE,kBAAC,EAAD,CACEb,WAAYA,EAAWnD,KAAI,SAAAsC,GAAQ,MAAI,CAACA,EAAU3C,EAAQO,SAASoC,OACnEV,SAAUzC,KAAK2E,oBAFjB,eAKF,yBAAKrG,UAAWG,IAAO+B,SAAvB,aAEG6D,EAAWxD,KAAI,gBAAEZ,EAAF,EAAEA,KAAMC,EAAR,EAAQA,MAAR,OACd,kBAAC,EAAD,CACEZ,IAAKW,EACLA,KAAMA,EACNC,MAAOA,EACPwC,SAAUlC,EAAQO,SAASd,GAC3BwC,SAAU,EAAKkC,0BAKtBQ,EAActE,KAAI,gBAAEZ,EAAF,EAAEA,KAAMG,EAAR,EAAQA,YAAaqF,EAArB,EAAqBA,IAAKC,EAA1B,EAA0BA,KAAMxF,EAAhC,EAAgCA,MAAOC,EAAvC,EAAuCA,KAAMG,EAA7C,EAA6CA,WAAYC,EAAzD,EAAyDA,SAAzD,OACf,kBAAC,EAAD,CACEjB,IAAKW,EACLA,KAAMA,EACNC,MAAOA,EACPC,KAAMA,EACNC,YAAaA,EACbE,WAAYA,EACZC,SAAUA,EACVoB,WAAY8D,EACZpF,YAAaqF,EACb7G,aAAcA,EACd2B,QAASA,EACTiC,SAAU,EAAK+B,uBAKtBD,GACC,yBAAKjG,UAAWG,IAAOkH,MACrB,kBAAC,EAAD,CACErH,UAAWG,IAAOmH,QAClBhF,QAASZ,KAAK0E,YAFhB,UAIA,kBAAC,EAAD,CACEzE,KAAMsE,EAAatE,KACnBG,YAAamE,EAAanE,YAC1BsB,UAAU,EACVC,WAAY4C,EAAakB,IACzBpF,YAAakE,EAAamB,a,GArHjBnE,IAAMC,WCSdqE,E,4MA1DbpG,MAAQ,CACNqF,MAAO,I,kEAGY,IAAD,OAClBgB,MAAMC,2CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAkBJ,IAjBA,IAAMrB,EAAQsB,OAAOC,QAAQF,GAAUtF,KAAI,YAA+E,IAAD,mBAA5EZ,EAA4E,YAAhEqG,EAAgE,EAArEC,IAAYC,EAAyD,EAAzDA,KAAMf,EAAmD,EAAnDA,IAAKC,EAA8C,EAA9CA,KAAMe,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWxF,EAAuB,EAAvBA,KAAM8C,EAAiB,EAAjBA,WAChG2C,EAAOlB,EAAImB,MAAM,MACvB,MAAO,CACL3G,OACAG,YAAaoG,EACbf,MACAC,OACAvF,KAAK,GAAD,mBACCwG,GADD,YAEE3C,EAAaA,EAAW4C,MAAM,MAAQ,IAFxC,gBAGMH,GACRH,EAAQ,MAAQ,cAElBhG,WAAYoG,EACZnG,SAAUW,MAGL2F,EAAI,EAAGA,EAAI/B,EAAMvF,OAAQsH,IAC5BA,EAAE,IAAQ,EACZ/B,EAAM+B,GAAG3G,MAAQ8B,EAAOE,OAGpB2E,EAAE,IAAQ,EACZ/B,EAAM+B,GAAG3G,MAAQ8B,EAAOC,KAGpB4E,EAAE,IAAQ,EACZ/B,EAAM+B,GAAG3G,MAAQ8B,EAAOM,KAGpBuE,EAAE,IAAQ,IACZ/B,EAAM+B,GAAG3G,MAAQ8B,EAAOK,mBAMlC,EAAKzC,SAAS,CAAEkF,e,+BAKpB,OACE,yBAAKxG,UAAU,OACb,kBAAC,EAAD,CAAUwG,MAAO9E,KAAKP,MAAMqF,a,GArDlBvD,IAAMC,WCGJsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjI,MACvB,2DCZNkI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtD,SAASuD,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxB,MAAK,SAAAyB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d724950e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Club_wrapper__2GFdX\",\"name\":\"Club_name__3-LbF\",\"tags\":\"Club_tags__1UWzo\",\"tag\":\"Club_tag___rvxw\",\"filtered\":\"Club_filtered__2Phgj\",\"field\":\"Club_field__1LHWT\",\"link\":\"Club_link__y_EYN\",\"matched\":\"Club_matched__7Vn8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ClubInfo_wrapper__NTbnL\",\"name\":\"ClubInfo_name__219NY\",\"description\":\"ClubInfo_description__Y1S-Y\",\"joinBtn\":\"ClubInfo_joinBtn__Ge_08\",\"feedItem\":\"ClubInfo_feedItem__33euP\",\"feedTitle\":\"ClubInfo_feedTitle__28EPG\",\"feedField\":\"ClubInfo_feedField__fTu7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CategoryDropdown_wrapper__2sNg3\",\"opener\":\"CategoryDropdown_opener__3GHqt\",\"dropdown\":\"CategoryDropdown_dropdown__3Y827\",\"item\":\"CategoryDropdown_item__1O0J6\",\"check\":\"CategoryDropdown_check__2ZJgL\",\"selected\":\"CategoryDropdown_selected__N9jb1\",\"label\":\"CategoryDropdown_label__3Jecu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ClubList_wrapper__3MciX\",\"list\":\"ClubList_list__2rHXi\",\"searchWrapper\":\"ClubList_searchWrapper__3fslY\",\"info\":\"ClubList_info__3GwZh\",\"backBtn\":\"ClubList_backBtn__1C_Lu\",\"clubSelected\":\"ClubList_clubSelected__1Vj3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FilterButton_button__KPHCO\",\"selected\":\"FilterButton_selected__2Cmi7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2mbUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__2taBz\"};","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\n/**\r\n * A centralized button component that allows for all buttons to look\r\n * consistent; it is designed based on the wireframe.\r\n */\r\nfunction Button({className, children, ...props}) {\r\n  return (\r\n    <button className={`${styles.button} ${className}`} {...props}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styles from './Club.module.css';\r\n\r\nfunction matchedString(string, searchFilter) {\r\n  if (!searchFilter) return string;\r\n  const parts = [];\r\n  // Reset .exec\r\n  searchFilter.lastIndex = 0;\r\n  let match = null;\r\n  let lastIndex = 0;\r\n  while ((match = searchFilter.exec(string))) {\r\n    parts.push(string.slice(lastIndex, match.index));\r\n    parts.push(<span className={styles.matched} key={match.index}>{match[0]}</span>);\r\n    lastIndex = match.index + match[0].length;\r\n  }\r\n  parts.push(string.slice(lastIndex));\r\n  return parts;\r\n}\r\n\r\n/**\r\n * Shows a club's name and tags, and reveals additional information when\r\n * clicked. There is functionality to instead show the club information\r\n * separately elsewhere, but it is not enabled.\r\n */\r\nclass Club extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    // this.props.onSelect(this.props.name);\r\n    this.setState({\r\n      open: !this.state.open\r\n    })\r\n  };\r\n\r\n  handleLinkClick = e => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n    const {name, color, tags, description, meetingTime, presidents, zoomLink, searchFilter, filters} = this.props;\r\n    const {open} = this.state;\r\n    return (\r\n      <button\r\n        className={styles.wrapper}\r\n        style={{backgroundColor: color}}\r\n        onClick={this.handleClick}\r\n      >\r\n        <h2 className={styles.name}>{matchedString(name, searchFilter)}</h2>\r\n        <ul className={styles.tags}>\r\n          {tags.map(tag => (\r\n            <li\r\n              className={`${styles.tag} ${filters.includes(tag) ? styles.filtered : ''}`}\r\n              key={tag}\r\n            >{tag}</li>\r\n          ))}\r\n        </ul>\r\n        {open && <>\r\n          <p className={styles.field}>{matchedString(description, searchFilter)}</p>\r\n          <p className={styles.field}>Time: <strong>{meetingTime}</strong></p>\r\n          <p className={styles.field}>President: {matchedString(presidents, searchFilter)}</p>\r\n          {zoomLink && <p className={styles.field}>Zoom link: <a\r\n            className={styles.link}\r\n            href={zoomLink}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            onClick={this.handleLinkClick}\r\n          >{zoomLink.replace(/^https?:\\/\\//, '')}</a></p>}\r\n        </>}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Club;\r\n","import React from 'react';\r\nimport Button from './Button.js';\r\nimport styles from './ClubInfo.module.css';\r\n\r\n/**\r\n * Shows information about a club. This was designed according to the wireframe,\r\n * but it's not used anymore.\r\n */\r\nclass ClubInfo extends React.Component {\r\n  render() {\r\n    const {name, description, joinable, meetingDay, meetingTime} = this.props;\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h1 className={styles.name}>{name}</h1>\r\n        {joinable && (\r\n          <Button className={styles.joinBtn}>Join</Button>\r\n        )}\r\n        <p className={styles.description}>{description}</p>\r\n        <div className={styles.feedItem}>\r\n          <h2 className={styles.feedTitle}>Club Meetings</h2>\r\n          <p className={styles.feedField}>Weekly, {meetingDay}</p>\r\n          <p className={styles.feedField}>Time: {meetingTime}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClubInfo;\r\n","const Colors = {\r\n  PINK: '#ffa789',\r\n  ORANGE: '#f4b869',\r\n  LIGHT_ORANGE: '#f4cb87',\r\n  DARK_ORANGE: '#f0a35b',\r\n  VERY_LIGHT_ORANGE: '#f7cd96',\r\n  BLUE: '#A0B4C7',\r\n  BROWN: '#806961'\r\n};\r\n\r\nexport default Colors;\r\n","import React from 'react';\r\nimport styles from './FilterButton.module.css';\r\n\r\n/**\r\n * Represents a tag, and when clicked, will signal that the club should/should\r\n * not be filtered by the tag.\r\n */\r\nclass FilterButton extends React.Component {\r\n  handleClick = () => {\r\n    this.props.onSelect(this.props.name);\r\n  };\r\n\r\n  render() {\r\n    const {name, color, selected} = this.props;\r\n    return (\r\n      <button\r\n        className={`${styles.button} ${selected ? styles.selected : ''}`}\r\n        onClick={this.handleClick}\r\n        style={{'--color': color}}\r\n      >{name}</button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterButton;\r\n","import React from 'react';\r\nimport styles from './Search.module.css';\r\n\r\n/**\r\n * The search bar for searching clubs. This doesn't perform the actual\r\n * search—that is done by <ClubList>; instead, <Search> just signals whenever\r\n * the user types something into the search box.\r\n */\r\nclass Search extends React.Component {\r\n  handleInput = e => {\r\n    this.props.onChange(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"search\"\r\n        value={this.props.search}\r\n        placeholder=\"Search clubs\"\r\n        className={styles.search}\r\n        onChange={this.handleInput}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport styles from './CategoryDropdown.module.css';\r\n\r\nclass DropdownItem extends React.Component {\r\n  handleClick = () => {\r\n    this.props.onSelect(this.props.category);\r\n  };\r\n\r\n  render() {\r\n    const {category, selected} = this.props;\r\n    return (\r\n      <button className={`${styles.item} ${selected ? styles.selected : ''}`} onClick={this.handleClick}>\r\n        <span className={styles.check}>✔</span>\r\n        <span className={styles.label}>{category}</span>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass CategoryDropdown extends React.Component {\r\n  wrapperRef = null;\r\n\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('click', this.handleClose);\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = e => {\r\n    if (!this.wrapperRef.contains(e.target)) {\r\n      this.setState({ open: false });\r\n    }\r\n  };\r\n\r\n  setRef = ref => {\r\n    this.wrapperRef = ref;\r\n  };\r\n\r\n  render() {\r\n    const {children, categories, onSelect} = this.props;\r\n    const {open} = this.state;\r\n    const selectedCount = categories.filter(([, selected]) => selected).length\r\n    return (\r\n      <div className={styles.wrapper} ref={this.setRef}>\r\n        <button\r\n          className={styles.opener}\r\n          onClick={this.handleOpen}\r\n        >{children} {selectedCount > 0 && `(${selectedCount})`} ▾</button>\r\n        {open && (\r\n          <div className={styles.dropdown}>\r\n            {categories.map(([category, selected]) => (\r\n              <DropdownItem\r\n                key={category}\r\n                category={category}\r\n                selected={selected}\r\n                onSelect={onSelect}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryDropdown;\r\n","import React from 'react';\r\nimport Button from './Button.js';\r\nimport Club from './Club.js';\r\nimport ClubInfo from './ClubInfo.js';\r\nimport Colors from '../Colors.js';\r\nimport FilterButton from './FilterButton.js';\r\nimport Search from './Search.js';\r\nimport CategoryDropdown from './CategoryDropdown.js';\r\nimport styles from './ClubList.module.css';\r\n\r\n// https://stackoverflow.com/a/9310752\r\nfunction escapeRegExp(text) {\r\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n\r\nconst allFilters = [\r\n  {name: 'Monday', color: Colors.PINK},\r\n  {name: 'Tuesday', color: Colors.PINK},\r\n  {name: 'Wednesday', color: Colors.PINK},\r\n  {name: 'Thursday', color: Colors.PINK},\r\n  {name: 'Friday', color: Colors.PINK},\r\n  {name: 'New', color: Colors.DARK_ORANGE},\r\n  {name: 'Returning', color: Colors.DARK_ORANGE}\r\n];\r\n\r\n// TODO: Alphabetize?\r\nconst categories = [\r\n  'Arts',\r\n  'Community',\r\n  'Culture',\r\n  'Games',\r\n  'Misc.',\r\n  'Political',\r\n  'Profession',\r\n  'Religion',\r\n  'STEM',\r\n  'Sports'\r\n];\r\n\r\n/**\r\n * Displays clubs and makes them searchable and filterable.\r\n *\r\n * <ClubList> components:\r\n * + -------------------------------------------------- +\r\n * | Gunn Clubs                  |                      |\r\n * | <Search>                    |                      |\r\n * | <CategoryDropdown>          |                      |\r\n * | Filter by: <FilterButton>   |                      |\r\n * |   <FilterButton> ...        |      <ClubInfo>      |\r\n * | <Club>                      |   (unused for now)   |\r\n * | <Club>                      |                      |\r\n * | <Club>                      |                      |\r\n * | <Club>                      |                      |\r\n * | ...                         |                      |\r\n * + -------------------------------------------------- +\r\n *\r\n * Club info is shown in <Club>s since <ClubInfo> is unused. The club data is\r\n * received as a prop from <App> (see src/App.js).\r\n */\r\nclass ClubList extends React.Component {\r\n  state = {\r\n    selectedClub: null,\r\n    search: '',\r\n    filters: []\r\n  };\r\n\r\n  handleSelectClub = clubName => {\r\n    // this.setState({\r\n    //   selectedClub: clubName\r\n    // });\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.setState({\r\n      selectedClub: null\r\n    });\r\n  };\r\n\r\n  handleSelectFilter = filterName => {\r\n    if (this.state.filters.includes(filterName)) {\r\n      this.setState({\r\n        filters: this.state.filters.filter(filter => filter !== filterName)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        filters: [filterName, ...this.state.filters]\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSearch = search => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  render() {\r\n    const {clubs} = this.props;\r\n    const {selectedClub: selectedClubName, search, filters} = this.state;\r\n    const selectedClub = clubs.find(club => club.name === selectedClubName);\r\n    const searchFilter = search ? new RegExp(escapeRegExp(search), 'ig') : null;\r\n    const filteredClubs = clubs.filter(club => {\r\n      if (filters.length > 0) {\r\n        // Hide clubs that do not have a selected filter\r\n        if (filters.some(filter => !club.tags.includes(filter))) {\r\n          return false;\r\n        }\r\n      }\r\n      if (searchFilter) {\r\n        // Hide clubs that do not have the search query in its name, description, nor presidents\r\n        if (\r\n          !searchFilter.test(club.name) &&\r\n          !searchFilter.test(club.description) &&\r\n          !searchFilter.test(club.presidents)\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n    return (\r\n      <div className={`${styles.wrapper} ${selectedClub ? styles.clubSelected : ''}`}>\r\n        <div className={styles.list}>\r\n          <h1> Gunn Clubs </h1>\r\n          <div className={styles.searchWrapper}>\r\n            <Search\r\n              search={search}\r\n              onChange={this.handleSearch}\r\n            />\r\n            <div>\r\n             \r\n              <CategoryDropdown\r\n                categories={categories.map(category => [category, filters.includes(category)])}\r\n                onSelect={this.handleSelectFilter}\r\n              >Categories</CategoryDropdown>\r\n            </div>\r\n            <div className={styles.filters}>\r\n              Filter by:\r\n              {allFilters.map(({name, color}) => (\r\n                <FilterButton\r\n                  key={name}\r\n                  name={name}\r\n                  color={color}\r\n                  selected={filters.includes(name)}\r\n                  onSelect={this.handleSelectFilter}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          {filteredClubs.map(({name, description, day, time, color, tags, presidents, zoomLink}) => (\r\n              <Club\r\n                key={name}\r\n                name={name}\r\n                color={color}\r\n                tags={tags}\r\n                description={description}\r\n                presidents={presidents}\r\n                zoomLink={zoomLink}\r\n                meetingDay={day}\r\n                meetingTime={time}\r\n                searchFilter={searchFilter}\r\n                filters={filters}\r\n                onSelect={this.handleSelectClub}\r\n              />\r\n            ))}\r\n        </div>\r\n        {/* <ClubInfo> is not used anymore (this is a vestigial structure). */}\r\n        {selectedClub && (\r\n          <div className={styles.info}>\r\n            <Button\r\n              className={styles.backBtn}\r\n              onClick={this.handleBack}\r\n            >&lt; Back</Button>\r\n            <ClubInfo\r\n              name={selectedClub.name}\r\n              description={selectedClub.description}\r\n              joinable={false}\r\n              meetingDay={selectedClub.day}\r\n              meetingTime={selectedClub.time}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClubList;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport ClubList from './components/ClubList.js';\r\nimport Colors from './Colors.js';\r\n\r\n/**\r\n * Fetches club data from a JSON then gives it as a prop to <ClubList>, which\r\n * displays the clubs and makes it searchable and filterable.\r\n */\r\nclass App extends React.Component {\r\n  state = {\r\n    clubs: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(process.env.PUBLIC_URL + '/gunn-clubs-2020-21.json')\r\n      .then(response => response.json())\r\n      .then(clubData => {\r\n        const clubs = Object.entries(clubData).map(([name, {new: isNew, desc, day, time, tier, president, link, categories}]) => {\r\n          const days = day.split(', ');\r\n          return {\r\n            name,\r\n            description: desc,\r\n            day,\r\n            time,\r\n            tags: [\r\n              ...days,\r\n              ...(categories ? categories.split(', ') : []),\r\n              `Tier ${tier}`,\r\n              isNew ? 'New' : 'Returning'\r\n            ],\r\n            presidents: president,\r\n            zoomLink: link\r\n          };\r\n        });\r\n        for (let i = 0; i < clubs.length; i++) {\r\n          if (i%4.0 === 1) {\r\n            clubs[i].color = Colors.ORANGE\r\n          }\r\n          else {\r\n            if (i%4.0 === 2) {\r\n              clubs[i].color = Colors.PINK\r\n            }\r\n            else {\r\n              if (i%4.0 === 3) {\r\n                clubs[i].color = Colors.BLUE\r\n              }\r\n              else {\r\n                if (i%4.0 === 0) {\r\n                  clubs[i].color = Colors.VERY_LIGHT_ORANGE\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.setState({ clubs });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ClubList clubs={this.state.clubs} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}